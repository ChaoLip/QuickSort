public class QuickSort{

     public static void main(String []args){
        System.out.println("Let's Go");
        int[] arr = {12,20,5,16,15,1,30,45,23,9};
        int start = 0;
        int end = arr.length-1;
        sort(arr,start,end);
        for(int i = 0; i<arr.length; i++){
             System.out.println(arr[i]);
         }
        
     }
     
     public void sort(int[] arr,int low,int high){
         int start = low;
         int end = high;
         int key = arr[low];
         
         
         while(end>start){
             //从后往前比较
             while(end>start&&a[end]>=key)  //如果没有比关键值小的，比较下一个，直到有比关键值小的交换位置，然后又从前往后比较
                 end--;
             if(arr[end]<=key){
                 int temp = arr[end];
                 arr[end] = arr[start];
                 arr[start] = temp;
             }
             //从前往后比较
             while(end>start&&arr[start]<=key)//如果没有比关键值大的，比较下一个，直到有比关键值大的交换位置
                start++;
             if(arr[start]>=key){
                 int temp = arr[start];
                 arr[start] = arr[end];
                 arr[end] = temp;
             }
         //此时第一次循环比较结束，关键值的位置已经确定了。左边的值都比关键值小，右边的值都比关键值大，但是两边的顺序还有可能是不一样的，进行下面的递归调用
         }
         //递归
         if(start>low) sort(arr,low,start-1);//左边序列。第一个索引位置到关键值索引-1
         if(end<high) sort(arr,end+1,high);//右边序列。从关键值索引+1到最后一个
     }
     
}
